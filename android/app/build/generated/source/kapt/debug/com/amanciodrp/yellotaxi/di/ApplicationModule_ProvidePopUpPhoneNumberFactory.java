// Generated by Dagger (https://google.github.io/dagger).
package com.amanciodrp.yellotaxi.di;

import com.amanciodrp.yellotaxi.repository.PhonePopUpRepositoryNumberImpl;
import com.amanciodrp.yellotaxi.repository.PhonePopupRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ApplicationModule_ProvidePopUpPhoneNumberFactory
    implements Factory<PhonePopupRepository> {
  private final ApplicationModule module;

  private final Provider<PhonePopUpRepositoryNumberImpl> phoneDataProvider;

  public ApplicationModule_ProvidePopUpPhoneNumberFactory(
      ApplicationModule module, Provider<PhonePopUpRepositoryNumberImpl> phoneDataProvider) {
    this.module = module;
    this.phoneDataProvider = phoneDataProvider;
  }

  @Override
  public PhonePopupRepository get() {
    return provideInstance(module, phoneDataProvider);
  }

  public static PhonePopupRepository provideInstance(
      ApplicationModule module, Provider<PhonePopUpRepositoryNumberImpl> phoneDataProvider) {
    return proxyProvidePopUpPhoneNumber(module, phoneDataProvider.get());
  }

  public static ApplicationModule_ProvidePopUpPhoneNumberFactory create(
      ApplicationModule module, Provider<PhonePopUpRepositoryNumberImpl> phoneDataProvider) {
    return new ApplicationModule_ProvidePopUpPhoneNumberFactory(module, phoneDataProvider);
  }

  public static PhonePopupRepository proxyProvidePopUpPhoneNumber(
      ApplicationModule instance, PhonePopUpRepositoryNumberImpl phoneData) {
    return Preconditions.checkNotNull(
        instance.providePopUpPhoneNumber(phoneData),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
